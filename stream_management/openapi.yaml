openapi: '3.0.3'
info:
  version: 1.0.0
  title: Stream Management API for OpenID Shared Security Events
  description: |
    [OpenID Spec](https://openid.net/specs/openid-sse-framework-1_0.html#management)

    HTTP API to be implemented by Event Transmitters. This API can be used by
    Event Receivers to query and update the Event Stream configuration and
    status, to add and remove subjects, and to trigger verification.
  license:
    name: MIT

paths:
  /.well-known/sse-configuration:
    $ref: './paths/configuration.yaml'
  /.well-known/sse-configuration/{issuer}:
    $ref: './paths/configuration-with-issuer.yaml'
  /status:
    $ref: './paths/status.yaml'
  /add-subject:
    $ref: './paths/add-subject.yaml'
  /remove-subject:
    $ref: './paths/remove-subject.yaml'
  /verification:
    $ref: './paths/verification.yaml'

components:
  parameters:
    issuer:
      $ref: './parameters/path/issuer.yaml'
    subject:
      $ref: './parameters/query/subject.yaml'

  schemas:
    StreamStatus:
      $ref: './schemas/StreamStatus.yaml'
    TransmitterConfiguration:
      $ref: './schemas/TransmitterConfiguration.yaml'
    UpdateStreamStatus:
      $ref: './schemas/UpdateStreamStatus.yaml'

    # Request Body params
    AddSubjectParameters:
      $ref: './schemas/AddSubjectParameters.yaml'
    RemoveSubjectParameters:
        $ref: './schemas/RemoveSubjectParameters.yaml'
    VerificationParameters:
      $ref: './schemas/VerificationParameters.yaml'

    # Simple Subjects
    Account:
      $ref: './schemas/subject/Account.yaml'
    DID:
      $ref: './schemas/subject/DID.yaml'
    Email:
      $ref: './schemas/subject/Email.yaml'
    IssSub:
      $ref: './schemas/subject/IssSub.yaml'
    JwtID:
      $ref: './schemas/subject/JwtID.yaml'
    Opaque:
      $ref: './schemas/subject/Opaque.yaml'
    PhoneNumber:
      $ref: './schemas/subject/PhoneNumber.yaml'
    SamlAssertionID:
      $ref: './schemas/subject/SamlAssertionID.yaml'

    # Nested Subjects
    SimpleSubject:
      $ref: './schemas/subject/SimpleSubject.yaml'
    Aliases:
      $ref: './schemas/subject/Aliases.yaml'
    ComplexSubject:
      $ref: './schemas/subject/ComplexSubject.yaml'

    # Subject
    Subject:
      $ref: './schemas/subject/Subject.yaml'

    # Errors
    Error:
      $ref: './schemas/Error.yaml'

  responses:
    BadRequest:
      # 400
      description: Request body cannot be parsed or the request is otherwise invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthenticated:
      # 401
      description: Authentication failed or is missing
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      # 403
      description: User not authorized to access resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      # 404
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    TooManyRequests:
      # 429
      description: Event Receiver is sending too many requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
